Welcome to the 3rd part of HW2. In this part, you are encouraged to explore the sparse coding with MATLAB code. The original code can be downloaded from http://redwood.berkeley.edu/bruno/sparsenet/. Please refer to the paper (http://redwood.berkeley.edu/bruno/papers/nature-paper.pdf) for more theoretic details. Please note that a few modifications are needed in this homework. Sorry to mention that the code can be run normally in Mac, Linux and not stable in Windows. So, you are allowed to complete this part in a teamwork (no more than 3 students in one group).

Please read the instructions carefully, your patience would be greatly appreciated. If you have any questions concerning this part, please do not hesitate to contact Zhuotun Zhu at zt@ucla.edu.

In this part, you are assigned three subparts. To begin with, you need to understand the "sparsenet.m" code as much as possible. The followings are some important parameters in the "sparsenet.m" code, to which you need pay attention.

A: a N by M basis matrix with each column denoting one base (vector), where N denotes the dimension of each base and M denotes the number of basis. 
beta: sparse parameter (lambda in the referred paper).
X: matrix needed to be reconstructed by basis.
S: coefficient matrix with each column denoting the reconstruction coefficients with respect to the corresponding column in X.

1. Sparse coding of natural images.
In this subpart, we calculate the sparse coefficient of natural images. Please change the M with other parameters set as the default and see what the basis (shown in Fig 1) look like. Typical, please select M from these numbers: 4, 9, 16, 25, 36, 64, 100.

2. Sparse coding of high-frequency sinusoid images.
In the 2nd subpart, we change the matrix X reconstructed by the basis from natural images to the high-dimensional sinusoid images, which is different from the 1st subpart. First, the "gensin.m" can help you generate the sinusoid patches. In "gensin.m", you need to set the "omega" parameter to choose certain frequency of sinusoid patches. Second, in each iteration reassign X with randomly patches selected from the high-frequency sinusoids pool generated by the "gensin.m" script. A few modifications are required to reassign X compared with the original code. Then change the M with other parameters set as the default. Typical, you need to set M as: 4, 36, 100, 900. How do these basis change according to the different M (the number of basis)?

3. Sparse coding of low-frequency sinusoid images.
Congrats to move to the last subpart. In this subpart, we need to generate the low-frequency of sinusoid images, which is the only difference from the 2nd subpart. Same with before, change the M with other parameters set as the default. We suggest you set the M as: 4, 36, 100. How do these basis change according to the different M? Please make comparisons with the 2nd part and explain why the difference come out. You are encouraged to use the "ShowPatches.m" code to visualize the patches you reconstruct both in the subpart 2 and 3. 
